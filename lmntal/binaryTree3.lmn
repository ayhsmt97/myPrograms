
run = [insert(9), search(6)].
run = [insert(6), search(9)].

head(n(null, null, null)).

head(n(Y, L, R)), run = [P | Q] :- head(n(Y, L, R, P)), run = Q.

P = n(null, null, null, insert(X)) :- P = n(X, n(null, null, null), n(null, null, null)).
P = n(Y, n(A, L, R), R1, insert(X)) :- X =< Y | P = n(Y, n(A, L, R, insert(X)), R1).
P = n(Y, L1, n(A, L, R), insert(X)) :- X > Y | P = n(Y, L1, n(A, L, R, insert(X))).

head(n(Y, L, R)), '.'(search(X), Q) :- head(n(Y, L, R, search(X))), '.'(Q).

P = n(Y, L, R, search(X)) :- X =:= Y | true(X), P = n(Y, L, R).
P = n(Y, n(A, L, R), R2, search(X)) :- X < Y | P = n(Y, n(A, L, R, search(X)), R2).
P = n(Y, L2, n(A, L, R), search(X)) :- X > Y | P = n(Y, L2, n(A, L, R, search(X))).
P = n(null, L, R, search(X)) :- false(X), P = n(null, L, R).