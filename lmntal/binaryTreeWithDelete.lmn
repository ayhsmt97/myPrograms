
run = [insert(9), insert(4), insert(1), insert(5), insert(3), delete(4)].

head(n(null, null, null)).

head(n(Y, L, R)), run = [P | Q] :- head(n(Y, L, R, P)), run = Q.

P = n(null, null, null, insert(X)) :- P = n(X, n(null, null, null), n(null, null, null)).
P = n(Y, L, R, insert(X)) :- X =:= Y | P = n(Y, L, R).
P = n(Y, n(A, L, R), R1, insert(X)) :- X < Y | P = n(Y, n(A, L, R, insert(X)), R1).
P = n(Y, L1, n(A, L, R), insert(X)) :- X > Y | P = n(Y, L1, n(A, L, R, insert(X))).

P = n(Y, L, R, search(X)) :- X =:= Y | true(X), P = n(Y, L, R).
P = n(Y, n(A, L, R), R2, search(X)) :- X < Y | P = n(Y, n(A, L, R, search(X)), R2).
P = n(Y, L2, n(A, L, R), search(X)) :- X > Y | P = n(Y, L2, n(A, L, R, search(X))).
P = n(null, L, R, search(X)) :- false(X), P = n(null, L, R).

P = n(Y, n(null, null, null), n(null, null, null), delete(X)) :- X =:= Y | P = n(null, null, null).
P = n(Y, n(A, L, R), n(null, null, null), delete(X)) :- X =:= Y, int(A) | P = n(A, L, R).
P = n(Y, n(null, null, null), n(A, L, R), delete(X)) :- X =:= Y, int(A) | P = n(A, L, R).
P = n(Y, n(A, L1, R1), n(B, L2, R2), delete(X)) :- X =:= Y, int(A), int(B) | P = n(Y, n(A, L1, R1, Z), n(B, L2, R2), delete(X, Q)), Q = searchMax(Z).
P = n(Y, L1, n(null, null, null), Z), Q = delete(X, searchMax(Z)) :- P = L1, Q = delete(X, searchMax(Y)).
P = n(Y, L1, n(A, L, R), Z), Q = delete(X, searchMax(Z)) :- int(A) | P = n(Y, L1, n(A, L, R, Z)), Q = delete(X, searchMax(Z)).
P = n(Y, L1, R1, delete(X, searchMax(Z))) :- int(Z), X =:= Y | P = n(Z, L1, R1).
P = n(Y, n(A, L, R), R2, delete(X)) :- X < Y | P = n(Y, n(A, L, R, delete(X)), R2).
P = n(Y, L2, n(A, L, R), delete(X)) :- X > Y | P = n(Y, L2, n(A, L, R, delete(X))).
P = n(null, L, R, delete(X)) :- int(X) | P = n(null, L, R).